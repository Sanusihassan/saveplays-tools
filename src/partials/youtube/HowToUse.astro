---
import type { youtubeDownloaderContentType } from "../../content/content";

const { howTo } = Astro.props as youtubeDownloaderContentType;

// Generate Schema.org HowTo JSON-LD
const howToSchema = {
    "@context": "https://schema.org",
    "@type": "HowTo",
    name: howTo.title,
    image: "/guide-to-download-youtube-video.png",
    step: howTo.steps.map((step, index) => ({
        "@type": "HowToStep",
        position: index + 1,
        text: step,
    })),
};
---

<script
    is:inline
    type="application/ld+json"
    set:html={JSON.stringify(howToSchema)}
/>
<article class="downloader-container">
    <div class="download-guide">
        <img
            src="/guide-to-download-youtube-video.png"
            alt="Step-by-step guide showing how to download YouTube videos"
            width="600"
            height="400"
            loading="lazy"
        />
    </div>
    <div class="instructions">
        <h2>{howTo.title}</h2>
        <ol class="steps-list" item-scope item-type="https://schema.org/HowTo">
            {
                howTo.steps.map((step, id) => (
                    <li
                        class="step-item"
                        item-prop="step"
                        item-scope
                        item-type="https://schema.org/HowToStep"
                    >
                        <meta item-prop="position" content={String(id + 1)} />
                        <span item-prop="text">{step}</span>
                    </li>
                ))
            }
        </ol>
    </div>
</article>

<style lang="scss">
    $main-color: #2ab7a9;
    .downloader-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 1rem;
        display: grid;
        gap: 2rem;

        @media (min-width: 768px) {
            grid-template-columns: 1fr 1fr;
            align-items: start;
        }

        .download-guide {
            background: #f5f5f5;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

            img {
                width: 100%;
                height: auto;
                display: block;
                object-fit: cover;
            }
        }

        .instructions {
            h2 {
                color: #1a1a1a;
                font-size: 1.75rem;
                margin-bottom: 1.5rem;
                font-weight: 600;
            }

            .steps-list {
                list-style: none;
                counter-reset: step-counter;
                padding: 0;

                .step-item {
                    position: relative;
                    padding: 1rem 1rem 1rem 3rem;
                    margin-bottom: 1rem;
                    background: #ffffff;
                    border-radius: 6px;
                    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
                    transition: transform 0.2s ease;

                    &:hover {
                        transform: translateX(5px);
                    }

                    &::before {
                        content: counter(step-counter);
                        counter-increment: step-counter;
                        position: absolute;
                        left: 1rem;
                        top: 50%;
                        transform: translateY(-50%);
                        width: 24px;
                        height: 24px;
                        background: $main-color;
                        color: white;
                        border-radius: 50%;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        font-weight: bold;
                        font-size: 0.875rem;
                    }
                }
            }
        }
    }
</style>
